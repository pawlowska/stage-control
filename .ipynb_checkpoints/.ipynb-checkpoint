{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import scipy as sp\n",
    "from scipy.interpolate import interp1d, interp2d\n",
    "import sofi\n",
    "import sofiism as si\n",
    "from time import time\n",
    "from scipy import signal\n",
    "import pandas as pd\n",
    "from gaussfitter_as import gaussfit\n",
    "import cv2\n",
    "import gaussfitter as gs\n",
    "from scipy.optimize import curve_fit"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [],
   "source": [
    "def photon_finder_gaussians(image, centers):\n",
    "    \n",
    "    #commented for circle=1\n",
    "    \n",
    "    param_names = ['angle', 'd_angle', 'offset', 'd_offset', 'amplitude', 'd_amplitude', 'xo', 'd_xo', \n",
    "                   'yo', 'd_yo', 'sx', 'd_sx', 'sy', 'd_sy']\n",
    "    res = {name: [] for name in param_names}\n",
    "    \n",
    "    for c in centers:\n",
    "        xo, yo = tuple(map(int, c))\n",
    "        fit, cov_p, infodict, errmsg = sofi.gaussfit(image, circle=0, return_all=1)\n",
    "        N = np.size(image)\n",
    "        n = len(fit)\n",
    "        s_sq = (infodict['fvec']**2).sum()/ (N-n) # infodict already contains f(x)-y, which is needed\n",
    "        cov = cov_p * s_sq\n",
    "        stds = [np.sqrt(cov[i][i]) for i in range(len(fit))]\n",
    "        #params = dict(zip(param_names, np.round(fit, 6)))\n",
    "        params = dict(zip(param_names, np.round(fit, 7)))\n",
    "        #const, amp, x, y, s, angle = fit\n",
    "        const, amp, x, y, sx, sy, angle = fit\n",
    "        #x +=5\n",
    "        #y +=5\n",
    "        res['offset'].append(const)\n",
    "        res['amplitude'].append(amp)\n",
    "        res['xo'].append(x)\n",
    "        res['yo'].append(y)\n",
    "        #res['s'].append(s)\n",
    "        res['sy'].append(sy)\n",
    "        res['sx'].append(sx)\n",
    "        res['angle'].append(angle)\n",
    "        res['d_offset'].append(stds[0])\n",
    "        res['d_amplitude'].append(stds[1])\n",
    "        res['d_xo'].append(stds[2])\n",
    "        res['d_yo'].append(stds[3])\n",
    "        res['d_sx'].append(stds[4])\n",
    "        res['d_sy'].append(stds[5])\n",
    "        res['d_angle'].append(stds[6])\n",
    "        \n",
    "        \n",
    "    #fits = pd.DataFrame(res)\n",
    "    #positions = pd.DataFrame(centers, columns=['xo', 'yo'])\n",
    "        \n",
    "    return res"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "scans=np.zeros((1,scans.shape[0],scans.shape[1],scans.shape[2],scans.shape[3]+2))\n",
    "scans[0,:,:,:,:-2]=np.load('scans/Adrian_v3_19_6_1uW_5Mhz.npy')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1, 100000, 30, 31, 25)"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "scans.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[0.00447016, 0.00162538, 0.00169473, 0.00163407, 0.00153236,\n",
       "        0.00177867, 0.00181808, 0.0018782 , 0.00181295, 0.00177909,\n",
       "        0.00210213, 0.00225072, 0.00214878, 0.00186607, 0.        ,\n",
       "        0.00241727, 0.0024497 , 0.00216013, 0.00178695, 0.00219879,\n",
       "        0.00241598, 0.00228192, 0.00193958, 0.        , 0.        ]])"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "scans.var(axis=(1,2,3))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "101.73214285714288"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "0.45*633/2.8"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "103.98214285714288"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "0.45*647/2.8"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "metadata": {},
   "outputs": [],
   "source": [
    "IMG=np.loadtxt('data\\IXON\\PSF_beads.asc')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.image.AxesImage at 0xb9ee548>"
      ]
     },
     "execution_count": 95,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.imshow(IMG)\n",
    "figsize"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 120,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.imshow(IMG[275:285,218:228])\n",
    "plt.show()\n",
    "plt.imshow(IMG[305:315,252:262])\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 125,
   "metadata": {},
   "outputs": [],
   "source": [
    "h=IMG[305:315,252:262]\n",
    "centers=si.find_max_index(h)\n",
    "res=photon_finder_gaussians(h, centers)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 126,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'angle': [-552.0938141649252], 'd_angle': [20.404860213736537], 'offset': [1955.8244816205147], 'd_offset': [32.96627327641831], 'amplitude': [3088.2637506871342], 'd_amplitude': [215.58154624354063], 'xo': [4.3635500450374005], 'd_xo': [0.06814996362078593], 'yo': [4.4824194697796385], 'd_yo': [0.0773304994428813], 'sx': [0.9730429120880967], 'd_sx': [0.07133896569800012], 'sy': [1.1168141090546617], 'd_sy': [0.08142751455819275]}\n"
     ]
    }
   ],
   "source": [
    "print(res)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 127,
   "metadata": {},
   "outputs": [],
   "source": [
    "sigma=(abs(res['sx'][0])+abs(res['sy'][0]))/2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 114,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "198.85672081776124"
      ]
     },
     "execution_count": 114,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#new1\n",
    "1000*sigma*16/100"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "167.1885616914207"
      ]
     },
     "execution_count": 124,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#new2\n",
    "1000*sigma*16/100"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "381.17547943034754"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "1000*sigma*16/100"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "373.2451735020535"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "1000*sigma*16/100"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "401.36025721865803"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "1000*sigma*16/100"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "397.9268689255921"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "1000*sigma*16/100"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "339.4170045934915"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "1000*sigma*16/100"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "316.73265024398887"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "1000*sigma*16/100"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "283.6832184786303"
      ]
     },
     "execution_count": 67,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "1000*sigma*16/100"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "375.2720574024053"
      ]
     },
     "execution_count": 73,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "1000*sigma*16/100"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "336.85023347492273"
      ]
     },
     "execution_count": 79,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "1000*sigma*16/100"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "416.8510184841773"
      ]
     },
     "execution_count": 85,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "1000*sigma*16/100"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "365.8124286404636"
      ]
     },
     "execution_count": 91,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "1000*sigma*16/100"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 128,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "167.1885616914207"
      ]
     },
     "execution_count": 128,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "1000*sigma*16/100"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "5"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
